; -*- mode: emacs-lisp; -*-
;; vim: filetype=lisp

;; Global Emacs configuration file
;; No "custom-sets" here

;; Indentation
(setq c-basic-offset 4)
(setq tab-width 4)
(setq-default indent-tabs-mode nil)

(autoload 'gtags-mode "gtags" "" t)

;; Move current line up or down with M-up or M-down
(defun move-line (n)
  "Move the current line up or down by N lines."
  (interactive "p")
  (let ((col (current-column))
	start
	end)
    (beginning-of-line)
    (setq start (point))
    (end-of-line)
    (forward-char)
    (setq end (point))
    (let ((line-text (delete-and-extract-region start end)))
      (forward-line n)
      (insert line-text)
      ;; restore point to original column in moved line
      (forward-line -1)
      (forward-char col))))
 
(defun move-line-up (n)
  "Move the current line up by N lines."
  (interactive "p")
  (move-line (if (null n) -1 (- n))))
 
(defun move-line-down (n)
  "Move the current line down by N lines."
  (interactive "p")
  (move-line (if (null n) 1 n)))

;; Keys
(global-set-key (kbd "A-<up>")   'move-line-up)
(global-set-key (kbd "A-<down>") 'move-line-down) 
(global-set-key (kbd "M-<up>")   'move-line-up)
(global-set-key (kbd "M-<down>") 'move-line-down) 
(global-set-key "\M-g"           'goto-line)
(global-set-key "\C-l"           'goto-line)
(global-set-key "\M-F"           'indent-region)

;; Manual jde install
;;(add-to-list 'load-path (expand-file-name "~/.emacs.d/site/jde/lisp"))
(require 'jde)

;; IDO-Mode (emacs goodies)
;; File open and buffer switch helper
(require 'ido)
(ido-mode t)
;;(require 'un-define)


;; TXT2Tags
(add-to-list 'load-path "~/.emacs.d")
(setq auto-mode-alist (append (list
			       '("\\.t2t$" . t2t-mode)
			       )
			      (if (boundp 'auto-mode-alist) auto-mode-alist)
			      ))
(autoload  't2t-mode "txt2tags-mode" "Txt2tags Mode" t)
(column-number-mode)

;; Detect indent - Para alguns modos: C/C++, Shell Script, perl, etc.
(add-to-list 'load-path "~/.emacs.d/plugins/dtrt-indent")
(require 'dtrt-indent)
(dtrt-indent-mode 1)

;; Color Theme
(load-library "color-theme")
(color-theme-charcoal-black)

;; Errr.. can't remember
(put 'scroll-left 'disabled nil)

;; Mouse wheel scrolling
(mouse-wheel-mode t)

;; ===== Set the highlight current line minor mode =====
;;
;; In every buffer, the line which contains the cursor will be fully
;; highlighted
					;(global-hl-line-mode 1)

;; ========== Set the fill column ==========
(setq-default fill-column 72)

;; ===== Turn on Auto Fill mode automatically in all modes =====

;; Auto-fill-mode the the automatic wrapping of lines and insertion of
;; newlines when the cursor goes over the column limit.

;; This should actually turn on auto-fill-mode by default in all major
;; modes. The other way to do this is to turn on the fill for specific modes
;; via hooks.
(setq auto-fill-mode 1)

;; Git
(require 'git)
(require 'git-blame)

;;; turn on syntax hilighting
(global-font-lock-mode 1)

;;; use groovy-mode when file ends in .groovy or has #!/bin/groovy at start
(autoload 'groovy-mode "groovy-mode" "Groovy editing mode." t)
(add-to-list 'auto-mode-alist '("\.groovy$" . groovy-mode))
(add-to-list 'interpreter-mode-alist '("groovy" . groovy-mode))

;; yasnippet
;; Just use TAB to auto insert snippet!
;; http://code.google.com/p/yasnippet/
(add-to-list 'load-path "~/.emacs.d/plugins/yasnippet-0.6.0c")
(require 'yasnippet)
(yas/initialize)
(yas/load-directory "~/.emacs.d/plugins/yasnippet-0.6.0c/snippets")
(require 'dropdown-list)

;; Initialize Pymacs                                                                                           
(autoload 'pymacs-apply "pymacs")
(autoload 'pymacs-call "pymacs")
(autoload 'pymacs-eval "pymacs" nil t)
(autoload 'pymacs-exec "pymacs" nil t)
(autoload 'pymacs-load "pymacs" nil t)

;; ropemacs - Code auto-complete using rope library
;; Use M-? and M-/
;; http://rope.sourceforge.net/ropemacs.html
(pymacs-load "ropemacs" "rope-")
(setq ropemacs-enable-autoimport t)

;; AutoComplete (http://www.emacswiki.org/emacs/AutoComplete)
(add-to-list 'load-path "~/.emacs.d/plugins/auto-complete")
(when (require 'auto-complete nil t)
  (require 'auto-complete-yasnippet)
  (require 'auto-complete-css)
  (require 'auto-complete-cpp)
  (require 'auto-complete-emacs-lisp)
  (require 'auto-complete-gtags)
  (require 'auto-complete-python)
  (require 'auto-complete-semantic)
  ;; (require 'auto-complete-ruby) ;; problems with this plugin
  (global-auto-complete-mode t))
